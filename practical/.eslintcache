[{"/Users/kevinyin/Documents/Programming/DAML/practical/src/index.js":"1","/Users/kevinyin/Documents/Programming/DAML/practical/src/App.js":"2","/Users/kevinyin/Documents/Programming/DAML/practical/src/reportWebVitals.js":"3","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Login.js":"4","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Register.js":"5","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Dashboard.js":"6","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Post.js":"7","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Add.js":"8","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Guard.js":"9"},{"size":500,"mtime":1611453784552,"results":"10","hashOfConfig":"11"},{"size":1866,"mtime":1612122199082,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611453784553,"results":"13","hashOfConfig":"11"},{"size":1713,"mtime":1611463110706,"results":"14","hashOfConfig":"11"},{"size":1420,"mtime":1612121866621,"results":"15","hashOfConfig":"11"},{"size":2055,"mtime":1611473236476,"results":"16","hashOfConfig":"11"},{"size":1477,"mtime":1611467415199,"results":"17","hashOfConfig":"11"},{"size":1766,"mtime":1611473230349,"results":"18","hashOfConfig":"11"},{"size":327,"mtime":1612121868218,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1l15wj3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevinyin/Documents/Programming/DAML/practical/src/index.js",[],["43","44"],"/Users/kevinyin/Documents/Programming/DAML/practical/src/App.js",["45","46","47","48","49"],"/Users/kevinyin/Documents/Programming/DAML/practical/src/reportWebVitals.js",[],"/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Login.js",["50"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction Login() {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const [body, setBody] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  function changeBodyInfo(e) {\n    console.log(e.target.name)\n\n     setBody({...body, [e.target.name]:e.target.value})\n     console.log(body)\n  }\n  function loginSubmit() {\n    console.log(body)\n    axios.post('http://localhost:8080/users/authenticate', body, {headers: {'Content-Type': 'application/json'}})\n    .then(function (response) {\n      console.log(response);\n      if (response.data.success) {\n        localStorage.setItem(\"isLoggedIn\", \"true\")\n        // history.replace(\"/dashboard\");\n        window.location.href = \"/dashboard\";\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n  return(\n    <div className=\"Login\">\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField label=\"Username\" type=\"text\" name = \"username\" defaultValue={body.username} onChange = {changeBodyInfo}/><br></br>\n      <TextField label=\"Password\" type=\"password\" name = \"password\" defaultValue={body.password} onChange = {changeBodyInfo}/>\n   </form>\n   <Button onClick = {loginSubmit}><strong>Log In</strong></Button>\n   <a href=\"/register\">Register</a>\n    </div>\n  )\n}\n\nexport default Login;\n","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Register.js",[],"/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Dashboard.js",["51","52"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Post from './Post';\nimport Add from './Add';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport './Dashboard.css'\n\nfunction Dashboard(){\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [posts, setPosts] = useState([])\n  useEffect(() => {\n    getBlogs()\n  }, []);\n  const getBlogs = async () => {\n    const { data } = await axios.get(\"https://my-json-server.typicode.com/nfried16/swe-practice/posts\");\n    setPosts(data)\n    return data;\n  }\n\n  function add(data) {\n    // posts.push(\"here\")\n    // setPosts(posts)\n    console.log(data)\n    var arr = [...posts]\n    arr.push(data)\n    setPosts(arr)\n    setOpen(false);\n  }\n  function remove(i){\n    var arr = [...posts]\n    arr.splice(i, 1)\n    setPosts(arr)\n  }\n  return(\n    <div className=\"Dashboard\">\n    <br/><br/>\n    <table>\n      <tr>\n      <td className=\"title-line\"><h1>Check out your feed:</h1></td>\n        <td>\n        <Button className=\"add\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Write a post\n        </Button>\n        </td>\n      </tr>\n\n    </table>\n    <br/>\n    {posts.map((blog, i) => <Post blog={blog} key={i} onChildClick={() => remove(i)}/>)}\n\n\n    <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Write a post!\"}</DialogTitle>\n        <DialogContent>\n          <Add add = {add}/>\n          <br/>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Dashboard;\n","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Post.js",["53"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction Post({blog, onChildClick}){\n  console.log(blog.length)\n  const classes = useStyles();\n\n  return(\n    <div className=\"Post\">\n\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {blog.topic}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {blog.title}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            By: {blog.author} Published: {blog.date_posted}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            {blog.content}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={onChildClick}>Remove</Button>\n        </CardActions>\n      </Card>\n      <br/>\n    </div>\n  )\n}\n\nexport default Post;\n","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Add.js",["54"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n      minWidth: 300\n    },\n  },\n}));\nfunction Add({add}) {\n  const classes = useStyles();\n\n  const [body, setBody] = useState({\n    author: \"\",\n    date_posted: \"\",\n    title:\"\",\n    content:\"\",\n    topic: \"\"\n  });\n  function changeBodyInfo(e) {\n     setBody({...body, [e.target.name]:e.target.value})\n     console.log(body)\n     console.log(e)\n\n  }\n  function onSubmit() {\n    add(body)\n  }\n  return(\n    <div className=\"Add\">\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField label=\"Your name\" type=\"text\" name = \"author\" defaultValue={body.author} onChange = {changeBodyInfo}/><br></br>\n      <TextField\n        id=\"date\"\n        label=\"Date\"\n        type=\"date\"\n        defaultValue={body.date_posted}\n        name=\"date_posted\"\n        inputFormat=\"MM-dd-YYYY\"\n        onChange = {changeBodyInfo}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      /><br/>\n      <TextField label=\"Topic\" type=\"text\" name = \"topic\" defaultValue={body.topic} onChange = {changeBodyInfo}/><br></br>\n\n      <TextField label=\"Title\" type=\"text\" name = \"title\" defaultValue={body.title} onChange = {changeBodyInfo}/><br></br>\n      <TextField label=\"Content\" type=\"text\" name = \"content\" defaultValue={body.content} onChange = {changeBodyInfo} multiline/>\n   </form>\n       <Button className=\"submit\" onClick = {onSubmit}><strong>Post</strong></Button>\n    </div>\n  )\n}\n\nexport default Add;\n","/Users/kevinyin/Documents/Programming/DAML/practical/src/components/Guard.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":13,"column":8,"nodeType":"61","messageId":"62","endLine":13,"endColumn":18},{"ruleId":"59","severity":1,"message":"64","line":14,"column":8,"nodeType":"61","messageId":"62","endLine":14,"endColumn":16},{"ruleId":"59","severity":1,"message":"65","line":28,"column":22,"nodeType":"61","messageId":"62","endLine":28,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":28,"column":79,"nodeType":"68","messageId":"69","endLine":28,"endColumn":81},{"ruleId":"59","severity":1,"message":"70","line":18,"column":9,"nodeType":"61","messageId":"62","endLine":18,"endColumn":16},{"ruleId":"59","severity":1,"message":"71","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":21},{"ruleId":"59","severity":1,"message":"72","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":25},{"ruleId":"59","severity":1,"message":"73","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"74","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'setStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]